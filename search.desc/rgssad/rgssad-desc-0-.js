searchState.loadedDescShard("rgssad", 0, "The library error type\nInvalid internal state, user error\nAn I/O error occured.\nThere was an error with the sans-io state machine.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe archive reader.\nsans-io state machines for reading and writing.\nTokio adapters for archive readers and writers.\nThe archive writer.\nAn file in an rgssad file\nA reader for a “rgssad” archive file\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner reader.\nGet a reference to the reader.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the inner reader.\nThe file path\nCreate a new <code>Reader</code> with the default encryption key.\nRead the next file from this archive.\nRead and validate the header.\nThe file size\nThe stepping function is done.\nThe stepping function is done.\nAn error that may occur while using sans-io state machines.\nThe provided file size does not match the file data’s …\nA file header\nFile name was too long\nFile name was too long\nA file name was invalid.\nInvalid magic number\nInvalid internal state, user error\nInvalid version\nRead at least the given number of bytes before stepping …\nA sans-io reader state machine.\nAn action that should be performed for the reader state …\nSeek to the given position before stepping again.\nThe writer buffer should be emptied.\nA sans-io writer state machine.\nAn action that should be performed for the writer state …\nGet the amount of data currently in the buffer.\nConsume a number of bytes from the output buffer.\nGet a reference to the output data buffer where data …\nSet the number of bytes written to the space buffer.\nTell the state machine that the seek it requested if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this is a <code>Done</code> variant.\nReturns true if this is a <code>Done</code> variant.\nThe file name\nCreate a new reader state machine.\nCreate a new writer state machine.\nThe file data size.\nGet a reference to the read buffer part where new data …\nGet a reference to the space data buffer where data should …\nRead file data.\nStep the state machine, performing the action of reading …\nStep the state machine, performing the action of reading …\nStep the state machine, performing the action of writing …\nStep the state machine, performing the action of writing …\nStep the state machine, performing the action of writing …\nThe error\nAn archive file\nA tokio wrapper for an archive reader.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable ref to the inner reader\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the inner reader\nGet the file path\nMake a new <code>TokioReader</code>.\nRead the next file.\nRead the header.\nGet the file size\nThe archive writer.\nFinish writing.\nReturns the argument unchanged.\nGet a mutable ref to the inner writer.\nCalls <code>U::from(self)</code>.\nGet the inner writer.\nCreate an archive writer around a writer.\nWrite a file.\nWrite the archive header.\nThe archive writer.\nFinish writing.\nReturns the argument unchanged.\nGet a mutable ref to the inner writer.\nCalls <code>U::from(self)</code>.\nGet the inner writer.\nCreate an archive writer around a writer.\nWrite a file.\nWrite the archive header.")